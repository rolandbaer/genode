assert {[have_spec hw] || [have_spec foc] || [have_spec nova] || [have_spec sel4]}

set start_at_zero "yes"
set inverse "yes"
if {[have_spec hw]} {            # hw has priorities 3..0
	set prio_levels_log2 2
	set inverse "no"
} elseif {[have_spec nova]} {    # nova has priorities 64..1
	set prio_levels_log2 6
	set start_at_zero "no"
} elseif {[have_spec foc] } {    # foc has priorities 127..0
	set prio_levels_log2 7
} elseif {[have_spec sel4] } {   # sel4 has priorities 255..0
	set prio_levels_log2 8
}

#
# Build
#

build { core init lib/ld test/scale_priority }


#
# Configure and assemble boot image
#

create_boot_directory

install_config {
	<config>
		<parent-provides>
			<service name="ROM"/>
			<service name="IRQ"/>
			<service name="IO_MEM"/>
			<service name="IO_PORT"/>
			<service name="PD"/>
			<service name="RM"/>
			<service name="CPU"/>
			<service name="LOG"/>
			<service name="TRACE"/>
		</parent-provides>

		<default-route>
			<any-service> <parent/> <any-child/> </any-service>
		</default-route>

		<default caps="1000" ram="10M"/>

		<start name="test-scale_priority">
			<config prio_levels_log2="} [set prio_levels_log2] {"
			        inverse="} [set inverse] {"
			        start_at_zero="} [set start_at_zero] {" />
		</start>
	</config>

}

build_boot_image [build_artifacts]

append qemu_args " -nographic "

run_genode_until "exited with exit value 0" 20
